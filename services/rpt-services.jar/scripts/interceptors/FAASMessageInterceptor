import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class FAASMessageInterceptor
{
	@PersistenceContext('main')
	def em
    
	@Service('LogService')
    def logSvc
    
    @Service('FAASService')
    def faasSvc 
	
	@Service('MessagingService')
	def msgSvc
	
	@After(pattern='MessagingService.onMessage', eval="#{result.type.matches('faas.approve')}") 
	public void interceptOnMessageFaasApprove( evt ) {
		def msg = evt.result 
		println 'Processing message -> ' + msg.type
		
		try {
			faasSvc.onlineApprove( msg.data.faasid, msg.data  )
			msgSvc.processedSuccessfully( msg )
		}
		catch( e ) {
			msgSvc.processError( msg, e )
		}
	}

	@After(pattern='MessagingService.onMessage', eval="#{result.type.matches('faas.disapprove')}") 
	public void interceptOnMessageFaasDisapprove( evt ) {
		def msg = evt.result 
		println 'Processing message -> ' + msg.type

		try {
			faasSvc.onlineDisapprove( msg.data.faasid, msg.data  )
			msgSvc.processedSuccessfully( msg )
		}
		catch( e ) {
			msgSvc.processError( msg, e )
		}
	}
}


