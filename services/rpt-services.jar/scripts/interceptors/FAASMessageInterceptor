import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class FAASMessageInterceptor
{
	@PersistenceContext('main')
	def em
    
	@Service('LogService')
    def logSvc
    
    @Service('FAASService')
    def faasSvc 
	
	@Service('MessagingService')
	def msgSvc
	
	@After(pattern='MessagingService.onMessage', eval="#{result.type.matches('faas.approve|faas.disapprove')}") 
	public void interceptOnMessage( evt ) {
		def msg = evt.result 
		println "FAASMessageInterceptor [${msg.type}]"
		
		try {
			if( msg.type == 'faas.approve') 
				faasSvc.onlineApprove( msg.data.faasid, msg.data  )
			else if( msg.type == 'faas.disapprove') 
				faasSvc.onlineDisapprove( msg.data.faasid, msg.data  )
			else 
				throw new Exception('FAAS Cancellation action ' + msg.type + ' is not supported.')
				
			msgSvc.processedSuccessfully( msg )
		}
		catch( e ) {
			println '='*50
            e.printStackTrace()
            msgSvc.errorProcessing( msg, e.message )
            throw e 
		}
	}
}


