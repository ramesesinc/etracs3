import com.rameses.annotations.*;
import com.rameses.eserver.*;
import com.rameses.common.*;
import java.rmi.server.UID;

class KindofBuildingService{
	@PersistenceContext('main')
	def em
	
	@Service('ETRACSUtilService')
	def utilSvc
	
	def final SCHEMA_NAME = 'kindofbuilding';
	def final SCHEMA_VERSION = '1.0';
	
	@ProxyMethod
	public def getList( searchText, params ){
		params += [ search : (searchText ? searchText + '%' : '%' ) ]
		def filters = []
		if( searchText ) {
			filters = [
				[' WHERE bldgcode LIKE $P{search}'],
				[' WHERE bldgkind LIKE $P{search}'],
			]
		}
		return utilSvc.getListFromQuery('kindofbuilding:getList', filters, params, 'o.objid')
	}
	
	@ProxyMethod
	public def open( objid ){
		return em.sqlContext.createNamedQuery( 'kindofbuilding:getById' ).setParameter( 'objid', objid ).singleResult;
	}
	
	@ProxyMethod
	public def read( kindbldg ) {
		return open( kindbldg.objid )	
	}

	@ProxyMethod
	public def saveCreate( kindbldg ){
		kindbldg.objid = "KBLDG" + new UID();
		kindbldg.schemaname = SCHEMA_NAME;
		kindbldg.schemaversion = SCHEMA_VERSION;
		validate( kindbldg );
		em.create( kindbldg.schemaname, kindbldg );
		return kindbldg;
	}
	
	@ProxyMethod
	public def saveUpdate( kindbldg ){
		validate( kindbldg );
		em.update( kindbldg.schemaname, kindbldg)
		return kindbldg;
	}
	
	@ProxyMethod
	public def remove( kindbldg ){
		em.delete( kindbldg.schemaname, kindbldg );
		return kindbldg
	}
    
    @ProxyMethod
    public List lookupBldgKind( searchText, params) {
        params += [ search : (searchText ? searchText + '%' : '%' ) ]
		def filters = []
		if( searchText ) {
			filters = [
				[' WHERE bldgcode LIKE $P{search}'],
				[' WHERE bldgkind LIKE $P{search}'],
			]
		}
		return utilSvc.getListFromQuery('kindofbuilding:lookupBldgKind', filters, params, 'o.objid')
    }
	
	
	private void validate( kindbldg ){
		em.validate(kindbldg.schemaname, kindbldg);
		utilSvc.checkDuplicateFieldValue('Code', 'kindofbuilding', 'bldgcode', kindbldg)
		utilSvc.checkDuplicateFieldValue('Building Kind', 'kindofbuilding', 'bldgkind', kindbldg)
	}
	
}
