import com.rameses.annotations.*;
import com.rameses.common.*;
import java.rmi.server.UID

class DiscountTypeService{
	
	@PersistenceContext('main')	
	def em
	
	@Service('ETRACSUtilService')
	def utilSvc
	
	def SCHEMA_NAME = 'discounttype' 
	
	@ProxyMethod
	public def getList( searchText, params ){
		searchText = (searchText ? searchText + '%' : '%' )
		params += [ search:searchText]
		def filters = [
			[' o.objid LIKE $P{search}'],
			[' o.discounttype LIKE $P{search}'],
		]
		return utilSvc.getListFromQuery('discounttype:getListByFilter', filters, params, 'o.objid')
	}
	
	@ProxyMethod
	public def read( entity  ){
		entity = em.read(SCHEMA_NAME, entity)
		if( ! entity ) throw new Exception('Discount Type does not exists or has already been deleted.')
		return entity 
	}
	
	@ProxyMethod
	public def saveCreate( entity ){
		validate( entity )
		em.create(SCHEMA_NAME, entity )
		return entity 
	}
	
	@ProxyMethod
	public def saveUpdate( entity  ){
		validate( entity )
		em.update(SCHEMA_NAME, entity )
		return entity
	}
	
	@ProxyMethod
	public def remove( entity  ) {
		def refentity = em.sqlContext.createNamedQuery('discounttype:checkReferencedItem')
								.setParameter('discounttypeid', entity.objid)
								.singleResult 
		if( refentity ) throw new Exception('Discount Type cannot be deleted. It is already referenced by a transaction ')
		
		em.delete( SCHEMA_NAME, entity )
		return entity 
	}
	
	void validate( entity ){
		em.validate(SCHEMA_NAME, entity)
		utilSvc.checkDuplicateFieldValue('Discount', 'discounttype', 'objid', entity)
		utilSvc.checkDuplicateFieldValue('Discount Type', 'discounttype', 'discounttype', entity)
	}

}
