import com.rameses.annotations.*;
import com.rameses.common.*;
import java.rmi.server.UID

class ProfessionService{
	
	@PersistenceContext('main')	
	def em
	
	@Service('ETRACSUtilService')
	def utilSvc
	
	@Service('LogService')
	def logService
	
	@ProxyMethod
	public def getList( searchText, params ){
		if( ! params ) {
			params = [
				_start : 0,
				_limit : 25,
			]
		}
		searchText = (searchText ? searchText + '%' : '%' )
		params += [ objid:searchText]
		def filters = [[' o.objid LIKE $P{objid}'],]
		return utilSvc.getListFromQuery('profession:getListByFilter', filters, params, 'o.objid')
	}
	
	@ProxyMethod
	public def open( objid ){
		def prof = em.sqlContext.createNamedQuery('profession:open').setParameter('objid', objid).singleResult
		if( ! prof ) throw new Exception('Cannot open Profession ' + objid + '.')
		return prof
	}
	
	@ProxyMethod
	public def create( profession ){
		checkDuplicate( profession )
		em.sqlContext.createNamedExecutor('profession:insert').setParameters(profession).execute()
		return profession
	}
	
	@ProxyMethod
	public def update( profession ){
		return create(profession)
	}
	
	@ProxyMethod
	public void delete( profession ) {
		em.sqlContext.createNamedExecutor('profession:delete').setParameters(profession).execute()
	}
	
	void checkDuplicate( profession ){
		boolean duplicate = false 
		try {
			def prof = open( profession.objid)
			duplicate = true 
		}
		catch( e ) {
			duplicate = false 
		}
		if( duplicate == true ) throw new Exception('Profession already exists.')
	}
}
